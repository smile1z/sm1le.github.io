[
  
  {
    "title": "2021 OWASP TOP10学习(待完善)",
    "url": "/posts/OWASP-TOP10/",
    "categories": "Web安全, 更多知识",
    "tags": "OWASP",
    "date": "2022-03-13 18:55:00 +0800",
    





    "snippet": "2021 OWASP TOP10学习(待完善)OWASP TOP10：open web application security project(开放式web应用安全项目)总结了web最可能、最常见、最危险的十大漏洞，是web安全界最权威的项目。自我认知OWASP TOP10有什么用？涵盖访问广吧，格局更大吧。包含了开发的全过程：环境方面(设计、配置、组件、基础设施、日志和监控)，通信方面(访问控制、加密机制、身份识别)，用户方面(注入、ssrf)。但其实了解过之后，还是挺干的，具体真正学习应该得潜移默化的了。虽然了解一遍，但还是不够理解，理解得比较浅层，勿喷。变化A1失效的访问控制访问控制强制实施策略，使用户无法在其预期权限之外进行操作。失败的访问控制通常会导致未经授权 的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。常见的漏洞  权限漏洞：访问的权限未设置；对POST等未做访问限制；访问权限检查被轻易绕过；CORS 配置错误造成越权；通过唯一标识符；可以查看修改其他用户信息；未登录造成权限提升；伪造令牌越权。  信息泄露漏洞：.git等备份文件。A2加密机制失效与加密机制相关的故障（或缺乏加密机制）， 这往往会导致敏感数据泄漏。常见的漏洞  加密漏洞：使用明文传输(HTTP、SMTP、经过TLS升级（如 STARTTLS ）的FTP)；在使用任何旧的或脆弱的加密算法或传输协议；使用默认加密密钥、生成或重复使用脆弱的加密密钥；缺少安全相关的HTTP（浏览器）指令或标头；缺少安全相关的HTTP（浏览器）指令或标头；未被验证的服务器证书和信任链；伪随机性；过时的散列函数；已弃用的加密填充方法；加密的错误消息或侧信道信息；缺乏密码基密钥派生函数；初始化向量密码操作模式操作模式不安全。A3注入恶意数据未做处理或处理不当，造成被直接使用或连接，提取额外的敏感记录。常见的漏洞  更常见的注入：SQL、NoSQL、OS命令、对象关系映射（ORM）、LDAP和表达式 语言（EL）或对象图导航库（OGNL）注入。源代码审查是 检测应用程序是否易受注入攻击的最佳方法。A4不安全设计(新类别)侧重于与设计和体系结构缺陷相关的风险，呼吁更多地使用威胁建模、 安全设计模式和参考体系结构。A5安全配置错误随着当今软件正转向高度可配置，所以配置错误造成漏洞就出现得多了。常见的配置错误  缺少适当的安全加固或者云服务的权限配置错误。  启用或安装了不必要的功能（例如：不必要的端口、服务、网页、帐户或权限）。  默认帐户和密码没有更改。  错误处理机制向用户纰漏大量错误信息。  最新的安全特性被禁用或未安全配置。  应用程序服务器、应用程序框架（如：Struts、Spring、ASP.NET）、库文件、数据库等没有进 行安全配置。  服务器不发送安全标头或指令，或未被设定安全参数。  的应用软件已过期或易受攻击需要一个体系的、可重复的应用程序安全配置过程A6自带缺陷和过时的组件自带缺陷和过时的组件A7身份识别和身份验证错误常见的漏洞  弱密码漏洞：撞库自动化攻击、暴力或其他自动化攻击、弱密码攻击、用明码和被加密的或使用较脆弱杂凑法的密码  无效的认证：脆弱或无效的认证资讯、无效的多因素认证。  session漏洞：URL中泄漏session ID、成功登入后没有轮换session ID、没有正确的注销会话session ID。A8软件和数据完整性故障(新类别)软件和数据完整性故障与无法防止违反完整性的代码和基础设施有关。常见的漏洞  不受信任的源、存储库和内容分发网络（CDN）的插件、库或模块带来风险。  对象 或数据被编码或序列化为攻击者可以看到和修改的结构，很容易受到不安全的反序列化的影响。A9安全日志和监控故障该类别是为了帮助检测、升级和应对活跃的违规行为。A10服务端请求伪造(新类别)一旦Web应用在获取远程资源时没有验证用户提供的URL，就会出现SSRF缺陷。它允许攻击 者强制应用程序发送一个精心构建的请求到一个意外目的地，即使是在有防火墙、VPN或其他类型 的网络访问控制列表（ACL）保护的情况下。预防措施  网络层：设置多个远程资源访问功能的网段；执行“默认拒绝”防火墙策略或网络访问控制规则。  应用层：检查和验证所有客户端提供的输入数据；禁用 HTTP 重定向；注意URL的一致性；使用白名单允许列表执行URL。参考资料OWASP-TOP10-2021中文版V1.0发布.pdf"
  },
  
  {
    "title": "网络基础",
    "url": "/posts/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/",
    "categories": "其他学习, 培训",
    "tags": "网络",
    "date": "2022-01-04 16:55:00 +0800",
    





    "snippet": "网络基础首先一说到计算机网络，大家肯定可以想起一台台计算机连接起来的样子，也能想到计算机网络是由网线连接成的。物理上，计算机网络就是由网线和网络通信硬件设备。网络硬件设备一般有：集线器、交换机、路由、网卡等等这里咱们就一起来学习，数据在通信硬件设备怎么传输的？计算机网络是由哪几层组成的？计算机网络七层模型：(70min - 90min)OSI模型(开放式系统互联模型)（英语：Open System Interconnection Model)OSI三方面概述图：OSI各层数据传输概述OSI各层硬件概述OSI各层协议概述各层都有什么用？(20min)物理层：​	物理层是OSI的第一层，它虽然处于最底层，却是整个开放系统的基础。物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。如果您想要用尽量少的词来记住这个第一层，那就是“信号和介质”。​	物理层规定：为传输数据所需要的物理链路创建、维持、拆除，而提供具有机械的，电子的，功能的和规范的特性。简单的说，物理层确保原始的数据可在各种物理媒体上传输。局域网与广域网皆属第1、2层（局域网、广域网主要涉及物理层和数据链路层两个层次）。​	物理层的任务是透明地传送比特流。数据链路层：​	数据链路层主要有两个功能 ：帧编码和误差纠正控制。帧编码意味着定义一个包含信息频率、位同步、源地址、目标地址以及其他控制信息的数据包。数据链路层协议又被分为两个子层 ：逻辑链路控制（LLC）协议和媒体访问控制（MAC）协议。​	数据链路层的最基本的功能是向该层用户提供透明的和可靠的数据传送结构的意义；可靠的传输使用户免去对丢失信息、干扰信息及顺序不正确等的担心。在物理层中这些情况都可能发生，在数据链路层中必须用纠错码来检错与纠错。数据链路层是对物理层传输原始比特流的功能的加强，将物理层提供的可能出错的物理连接改造成为逻辑上无差错的数据链路，使之对网络层表现为一无差错的线路。​	它的主要任务是负责在两个相邻结点之间的线路上无差错地传输以帧为单位的数据，即将一条有可能出差错的实际链路转变成让网络层向下看去好像是一条不出差错的链路。数据链路层将数据分解成帧，然后按顺序传输帧，每一帧包括数据和必要的控制信息（包括同步信息、地址信息、差错控制信息和流量控制信息等）。​	数据链路层最关键的技术就是媒体访问控制（MAC）。网络层：​	它是OSI参考模型中最复杂的一层，也是通信子网的最高层，它在下两层的基础上向资源子网提供服务。​	网络层的主要任务是为网络上的不同主机提供通信。它通过路由选择算法，为分组通过通信子网选择最适当的路径，以实现网络的互连功能。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、流量控制、拥塞控制等将信息从一台网络设备传送到另一台网络设备。网络层负责在网络中传送的数据单元是分组或包。传输层(数据通信与数据处理的桥梁)：​	一般来说，OSI下三层的主要任务是数据通信，上三层的任务是数据处理。因此，该层是通信子网和资源子网的接口和桥梁，起到了承上启下的作用。​	该层提供会话层和网络层之间的传输服务，这种服务从会话层获得数据，并在必要时对数据进行分割然后将数据传递到网络层，并确保数据能正确无误地传送到网络层。因此,运输层负责提供主机中两个进程之间数据的可靠传送。运输层的目的是向用户透明地传送报文，它向高层屏蔽了下层数据通信的细节。运输层的数据传输单元是报文段（segment），简称报文。会话层：​	这一层又称会晤层或对话层，其主要任务是负责维护两个实体之间的会话连接确保点到点的传输不被中断，并进行会话管理和数据交换管理，即组织和协调两个会话进程之间的通信，并对数据交换进行管理。表示层：​	它的主要功能是协商和建立数据交换的格式，解决各应用程序之间在数据格式表示上的差异，以使一个主机应用层的数据可以被另一个主机的应用层理解，如数据的加密、解密、编码、格式转换等。应用层：​	它是用户应用程序和网络之间的接口，完成用户希望在网络上完成的各种工作。它在其他六层工作的基础上，负责完成网络应用程序与网络操作系统之间的联系。应用层为用户提供的常见服务有文件服务、目录服务、文件传输服务（FTP）、远程登录服务（Telnet）、电子邮件服务（E-Mail）、打印服务、安全服务、网络管理服务、数据库服务等。各层数据传输(10min)自底向上的数据形式：(前三层为数据通信、后三层为数据处理)​	比特流 » 以帧为单位的数据 » 以分组或包为单元的数据(短数据段) » 以传输层的协议数据单元PDU的数据(长数据段) » 带会话层、表示层和应用层控制报头信息的数据 » 带表示层和应用层控制报头信息的数据 » 带应用层控制报头信息的数据 » 最终的数据​	特点：每层对其相应的控制信息进行识别和处理；然后将去掉该层控制信息的数据提交给上层处理；最后，发送进程的数据就传到接收方的接收进程。数据的发送过程(自顶向下)：  当发送端的应用进程需要发送数据到网络中另一台主机的应用进程时，数据首先被传送给应用层，应用层为数据加上本层的控制报头信息后，传递给表示层。  表示层接收到这个数据单元后，加上本层的控制报头信息，然后传送到会话层。  同样，会话层加上本层的报头信息后再传递给传输层。  传输层接收到这个数据单元后，加上本次的控制报头，形成传输层的协议数据单元PDU，然后传送给网络层。通常将传输层的PDU称为段（Segment）。  传输层报文送到网络层后，由于网络层的数据长度往往有限制，所以，从传输层过来的长数据段会被分成多个较小的数据段，分别加上网络层的控制信息后形成网络层的PDU传送。常常把网络层的PDU叫作分组（Packet）。  网络层的分组继续向下层传送，到达数据链路层，加上数据链路层的控制信息，构成数据链路层的协议数据单元，称为帧（Frame）。  数据链路层的帧被继续传送，到达物理层，物理层将数据信息以比特（Bit）流的方式通过传输介质传送出去。  如果发送的数据信息不能直接到达目标计算机，则会先传送到通信子网的路由设备上进行存储，后再转发。  当最终到达目标节点时，比特流将通过物理层依次向上传送。每层对其相应的控制信息进行识别和处理；然后将去掉该层控制信息的数据提交给上层处理；最后，发送进程的数据就传到接收方的接收进程。各层硬件概述(10min)物理层：网卡(第1层和2层之间)，网线，集线器，中继器，调制解调器数据链路层：网桥，以太网交换机网络层：路由器、三层交换机传输层：四层路由器、四层交换机、网关会话层、表示层、应用层：基本不需要硬件，软件(如浏览器)进行数据处理            设备      作用                  网卡      能使一台计算机上网的设备              集线器      接收并广播信号，扩大传递范围              中继器      从物理层上延长网络的设备              调制解调器      实现模拟信号和数字信号相互转换              网桥      从数据链路层上延长网络的设备网桥              以太网交换机      基于MAC地址寻址转发以太网数据帧              路由器      网关设备，通过网络层转发分组数据的设备，IP通信              4~7层交换机      处理传输层以上各层网络传输的设备              网关      复杂的网络互连设备，仅用于两个高层协议不同的网络互连      各层具体协议具体协议：(5min)重要协议：(30min)物理层：IEEE 802 1A，IEEE 802 2到IEEE 802.11A数据链路层：FDDI、Ethernet、Arpanet、PDN、SLIP、PPP​	数据链路层定义了在单个链路上如何传输数据。这些协议与被讨论的各种介质有关。示例：ATM，FFDI等。数据链路层必须具备一系列相应的功能，主要有：(一)如何将数据组合成数据块，在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位；(二)如何控制帧在物理信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配；以及(三)在两个网络实体之间提供数据链路通路的建立、维持和释放的管理。网络层：IP、ICMP、ARP、RARP、UUCPIP：IP地址：IPV4：​	首先出现的IP地址是IPV4，它只有4段数字，每一段最大不超过255。现在也几乎用的还是IPV4协议。IPv4采用32位地址长度，只有大约43亿个地址，在2019年11月25日IPv4位地址分配完毕。​	IP地址编址方案：IP地址编址方案将IP地址空间划分为A、B、C、D、E五类，其中A、B、C是基本类，D、E类作为多播和保留使用。它们适用的类型分别为：大型网络；中型网络；小型网络；多目地址；备用。常用的是B和C两类。​	A、B、C、D、E类IP网络为并列关系，而不是包含关系。​	最初设计互联网络时，为了便于寻址以及层次化构造网络，每个IP地址包括两个标识码（ID），即网络ID和主机ID。同一个物理网络上的所有主机都使用同一个网络ID，网络上的一个主机（包括网络上工作站，服务器等）有一个主机ID与其对应。Internet委员会定义了5种IP地址类型以适合不同容量的网络，即A类~E类。​	其中A、B、C3类（如下表格）由InternetNIC在全球范围内统一分配，D、E类为特殊地址。            类别      最大网络数      IP地址范围      单个网段最大主机数      私有IP地址范围                  A      126(2^7-2)      1.0.0.1-127.255.255.254      16777214      10.0.0.0-10.255.255.255              B      16384(2^14)      128.0.0.1-191.255.255.254      65534      172.16.0.0-172.31.255.255              C      2097152(2^21)      192.0.0.1-223.255.255.254      254      192.168.0.0-192.168.255.255      A类特点：在IP地址的四段号码中，第一段号码为网络号码，剩下的三段号码为本地计算机的号码。如果用二进制表示IP地址的话，网络地址的最高位必须是“0”。126个大胖子(大型网络)，A类网络只有126个网络号码。​	A类IP地址之所以认为很金贵，是因为A类地址的网络号码十分少，只有126个。每一个A级地址代表约1677万个地址，所有A类地址算出来有20.974亿之多了。中国没有分到一个“完整”的A类IP地址，而只是分到了一些A类IP地址之间的“缝隙”。在互联网的早期，很多“完整”或“准完整”的A类地址已经被美国的政府机构以及公司巨头瓜分的差不多了。中国能够申请的IP地址资源中，A类极少数，B类也不多，C类最多。B类特点：在IP地址的四段号码中，前两段号码为网络号码。如果用二进制表示IP地址的话，网络地址的最高位必须是“10”，1.6万个小胖子(中型网络)，B类IP地址的子网掩码为255.255.0.0。C类特点：在IP地址的四段号码中，前三段号码为网络号码。如果用二进制表示IP地址的话，网络地址的最高位必须是“110”，209万个瘦子(小型网络)子网掩码为255.255.255.0。子网掩码：IP默认分配的子网掩码每段只有255或0A类的默认子网掩码　255.0.0.0　一个子网最多可以容纳1677万多台电脑B类的默认子网掩码　255.255.0.0　一个子网最多可以容纳6万台电脑C类的默认子网掩码　255.255.255.0　一个子网最多可以容纳254台电脑它的主要作用有两个，一是用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。二是用于将一个大的IP网络划分为若干小的子网络。IPV6：​	现有的互联网是在IPv4协议的基础上运行的。IPv6是下一版本的互联网协议，采用128位地址长度。随着互联网的飞速发展和互联网用户对服务水平要求的不断提高，IPV6在全球将会越来越受到重视。实际上，并不急于推广IPv6，只需在现有的IPv4基础上将32位扩展8位到40位，即可解决IPv4地址不够的问题。这样一来可用地址数就扩大了256倍。IP协议：​	IP是Internet Protocol（网际互连协议）的缩写，是TCP/IP体系中的网络层协议。设计IP的目的是提高网络的可扩展性：一是解决互联网问题，实现大规模、异构网络的互联互通；二是分割顶层网络应用和底层网络技术之间的耦合关系，以利于两者的独立发展。根据端到端的设计原则，IP只为主机提供一种无连接、不可靠的、尽力而为的数据包传输服务。​	IP主要包含三方面内容：IP编址方案、分组封装格式及分组转发规则。​	IP是整个TCP/IP协议族的核心，也是构成互联网的基础。IP位于TCP/IP模型的网络层(相当于OSI模型的网络层)，它可以向传输层提供各种协议的信息，例如TCP、UDP等；对下可将IP信息包放到链路层，通过以太网、令牌环网络等各种技术来传送。IP是TCP/IP协议簇的运作核心，有时称TCP/IP互联网为基于IP技术的网络。：​	IP的最大成功之处在于它的灵活性，它只要求物理网络提供最基本的功能，即物理网络可以传输包―IP数据报，数据报有合理大小，并且不要求完全可靠地传递。IP提供的不可靠、无连接的数据报传送服务使得各种各样的物理网络只要能够提供数据报传输就能够互联，这成为Internet在数年间就风靡全球的主要原因。由于IP在TCP/IP协议中是如此的重要，它成为TCP/IP互联网设计中最基本的部分，有时都称TCP/IP互联网为基于IP技术的网络。​	IP是怎样实现网络互联的？各个厂家生产的网络系统和设备，如以太网、分组交换网等，它们相互之间不能互通，不能互通的主要原因是：因为它们所传送数据的基本单元（技术上称之为“帧”）的格式不同。IP协议实际上是一套由软件程序组成的协议软件，它把各种不同“帧”统一转换成“IP数据报”格式，这种转换是因特网的一个最重要的特点，使所有各种计算机都能在因特网上实现互通，即具有“开放性”的特点。传输层：两大协议：TCP、UDPTCP：​	TCP（Transmission Control Protocol，传输控制协议）是面向连接的协议，也就是说，在收发数据前，必须和对方建立可靠的连接。 一个TCP连接必须要经过三次“对话”才能建立起来，其中的过程非常复杂。TCP建立连接要进行3次握手，而断开连接要进行4次​	由TCP的三次握手和四次断开可以看出，TCP使用面向连接的通信方式， 大大提高了数据通信的可靠性，使发送数据端和接收端在数据正式传输前就有了交互， 为数据正式传输打下了可靠的基础。UDP：​	UDP(用户数据报协议)是面向非连接的，不与对方建立连接，而直接把数据报包发送出去。UDP适用于一次传输少量的数据，对于可靠性要求不高的应用环境。日常生活中使用的ping命令测试主机是否通信正常，事实上’ping’命令的原理就是向对方主机发送UDP数据包，然后对方主机确认收到数据包，假设数据包是否到达的消息及时反馈回来了，那么网络传输就是正常的。            特点      UDP      TCP                  是否连接      无连接      面向连接              是否可靠      不可靠传输，不使用流量控制和拥塞控制      可靠传输，使用流量控制和拥塞控制              连接对象个数      支持一对一，一对多，多对一和多对多交互通信      只能是一对一通信              传输方式      面向报文      面向字节流              首部开销      首部开销小，仅8字节      首部最小20字节，最大60字节              适用场景      适用于实时应用（IP电话、视频会议、直播等）      适用于要求可靠传输的应用，例如文件传输      会话层：SMTP,DNSDNS协议：​	相信大家在平时工作中都离不开DNS解析，DNS解析是互联网访问的第一步，无论是使用笔记本浏览器访问网络还是打开手机APP的时候，访问网络资源的第一步必然要经过DNS解析流程。访问网络资源其实是访问互联网服务器上的网络资源，服务器要被识别有两种方式，第一种就是IP地址，电脑可以直接使用，而人们却不太喜欢，例如访问百度就得输入一串IP地址对人很难很不友好。就有了第二种域名，访问百度就只用输入www.baidu.com，好记很友好。​	DNS就是域名系统，是因特网中的一项核心服务，是用于实现域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。通过主机名，得到该主机名对应的IP地址的过程叫做域名解析（或主机名解析）。说白了，DNS解析就是发挥把域名解析成IP地址的功能，让电脑以IP地址的形式使用。域名结构解析​	如上图所示，域名结构是树状结构，树的最顶端代表根服务器，根的下一层就是由我们所熟知的.com、.net、.cn等通用域和.cn、.uk等国家域组成，称为顶级域。网上注册的域名基本都是二级域名，比如http://baidu.com、http://taobao.com等等二级域名，它们基本上是归企业和运维人员管理。接下来是三级或者四级域名，这里不多赘述。总体概括来说域名是由整体到局部的机制结构。​	常见的DNS服务器就是两种：权威解析服务器和递归解析服务器。递归解析服务器也可以叫做localDNS。权威解析服务器​	DNS权威服务器保存着域名空间中部分区域的数据。如果DNS服务器负责管辖一个或多个区域时，称此DNS服务器为这些区域的权威服务器。根权威DNS或者二级权威服务器中的资源记录标记被指定为区域权威服务器的DNS服务器。通过资源记录中列出服务器，其他服务器就认	为它是该区域的权威服务器。这意味着在 NS 资源记录中指定的任何服务器都被其他服务器当作权威的来源，并且能肯定应答区域内所含名称的查询。递归服务器​	递归服务器在正常情况下，初始的时候里面没有任何域名解析数据，里面所有的域名解析数据都来自于它到权威解析服务器的查询结果，一旦查询完毕，递归服务器就会根据TTL时间在本地形成一条缓存记录，并为用户提供DNS解析的查询服务，这是递归服务器的功能。DNS解析流程​	表示层：Telnet​	Telnet协议是TCP/IP协议族中的一员，是Internet远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用telnet程序，用它连接到服务器。终端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。要开始一个telnet会话，必须输入用户名和密码来登录服务器。Telnet是常用的远程控制Web服务器的方法。应用层：HTTP：​	超文本传输协议（Hyper Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在TCP之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。请求和响应消息的头以ASCII形式给出；而消息内容则具有一个类似MIME的格式。这个简单模型是早期Web成功的有功之臣，因为它使开发和部署非常地直截了当。请求报文格式：请求方法：GET，POST ，HEAD ，OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 九种方法。版本：一般情况我们访问的网站要是HTTP1.1要么是HTTP2常见请求头部：  Host、Cookie、Accept、Accept-Encoding、Accept-Language、Connection、User-Agent等等实体：GET方法不放数据，一般用于POST方法放数据响应报文格式：状态码：1**、2**、3**、4**、5**。常见响应头部：  Content-Type、Date、Server、Refresh等等实体：请求成功会返回数据供浏览器解析FTP：​	文件传输协议（File Transfer Protocol，FTP）是用于在网络上进行文件传输的一套标准协议，它工作在 OSI 模型的第七层， TCP 模型的第四层， 即应用层， 使用 TCP 传输而不是 UDP， 客户在和服务器建立连接前要经过一个“三次握手”的过程， 保证客户与服务器之间的连接是可靠的， 而且是面向连接， 为数据传输提供可靠保证。​	FTP允许用户以文件操作的方式（如文件的增、删、改、查、传送等）与另一主机相互通信。然而， 用户并不真正登录到自己想要存取的计算机上面而成为完全用户， 可用FTP程序访问远程资源， 实现用户往返传输文件、目录管理以及访问电子邮件等等， 即使双方计算机可能配有不同的操作系统和文件存储方式。抛砖引玉：计算机网络体系结构分为3种：OSI体系结构、TCP / IP体系结构、五层体系结构。其他两种体系和OSI的区别HTTP：《图解HTTP》区分知识(20min)“四网”的辨析(5min)物联网 &amp;gt; 互联网 &amp;gt; 因特网 &amp;gt; 万维网物联网(IoT)：互联网是计算机之间的互相联接，而物联网是所有物体（包括计算机）的“互联网”。把电子、通信、计算机三大领域的技术融合起来，在互联网的基础上实现物物相连。互联网(internet)：凡是能彼此通信的计算机设备组成的网络就叫互联网，范围广，即使两台互相连接的电脑也算互联网。因特网(Internet)：是网络与网络之间所串连成的庞大网络，是互联网最大的一个。万维网(World Wide Web)：万维网也称为Web，是文件、图片、多媒体和其他资源的集合，资源通过超链接互相连接形成网络，并使用统一资源定位器（URL）标识。URI URL URN (15min)​	平时一般都用的是URL，URN几乎看不见，但这里还是进行区分一下，有所了解。​	URI是统一资源标识符，URL(统一资源定位符)和URN(统一资源名称)是URI的子集。​	Web上地址的基本形式是URI,它有两种形式：​			1.一种是URL，这是目前URI的最普遍形式。​			2.另一种就是URN，这是URL的一种更新形式，URN不依赖于位置，并且有可能减少失效连接的个数。但是其流行还需假以时			日，因为它需要更精密软件的支持。​	寻找一个具体的人：如果通过地址找，即xx省xx市xx区 … xx单元xx室的主人，这就是 URL（通过位置定位资源）；如果通过身份证号去找就是 URN（通过身份证号表示某个人，不通过某个人所在的位置）。简而言之，资源的具体位置就是URL，资源的名称或编号就是URN。​	URL的具体格式：​	[协议名]://[用户名]:[密码]@[服务器地址]:[服务器端口号]/[路径]?[查询字符串]#[片段ID]  协议名：例如http、https、ftp、mailto、file。  登录信息（用户名：密码）：指定用户名和密码作为从服务器端获取资源时必要的登录信息（身份认证）。此项是可选项。  服务器地址：使用绝对 URI 必须指定待访问的服务器地址。地址可以是类似 hackr.jp 这种 DNS 可解析的名称，或是 192.168.1.1 这类 IPv4 地址 名，还可以是 [0:0:0:0:0:0:0:1] 这样用方括号括起来的 IPv6 地址名。  服务器端口号：指定服务器连接的网络端口号。此项也是可选项，若用户省略则自动使用默认端口号。  带层次的文件路径：指定服务器上的文件路径来定位特指的资源。这与 UNIX 系统的文件目录结构相似。  查询字符串：针对已指定的文件路径内的资源，可以使用查询字符串传入任意参数。此项可选。  片段标识符：使用片段标识符通常可标记出已获取资源中的子资源（文档内的某个位置）。但在 RFC 中并没有明确规定其使用方法。该项也为可选项。例如百度搜索万维网：https://www.baidu.com/s?tn=15007414_9_dg&amp;amp;wd=万维网协议://服务器地址(:443)/带层次的文件路径?查询字符串​	URN的具体格式：​	URN的语法用巴科斯范式来写是：​		&amp;lt;URN&amp;gt; ::= &quot;urn:&quot; &amp;lt;NID&amp;gt; &quot;:&quot; &amp;lt;NSS&amp;gt;​	解析出来是：​		`	urn::`​	开头的urn:序列大小写不敏感的。&amp;lt;NID&amp;gt;是命名空间标识，它是一个“命名空间特定”的字符串，决定了如何解释&amp;lt;NSS&amp;gt;的句法。统一资源名称的功能需求在RFC 1737中描述。例如：            URN      corresponds to                  urn:isbn:0451450523      The 1968 book The Last Unicorn, identified by its book number              urn:isan:0000-0000-9E59-0000-O-0000-0000-2      The 2002 film Spider-Man, identified by its audiovisual number.              urn:issn:0167-6423      The scientific journal Science of Computer Programming, identified by its serial number.              urn:ietf:rfc:2648      The IETF’s RFC 2648.              urn:mpeg:mpeg7:schema:2001      The default namespace rules for MPEG-7 video metadata.              urn:oid:2.16.840      The OID for the United States.      TCP / IP体系结构简述​	TCP/IP网络层的核心是IP协议，它是TCP/IP协议族中最主要的协议之一。在TCP/IP协议族中，网络层协议包括IP协议（网际协议），ICMP协议（Internet互联网控制报文协议）以及ICMP协议（Internet组管理协议）。​	IP是一种网络层协议，提供的是一种不可靠的服务，它只是尽可能快地把分组从源结点送到目的结点，但是并不提供任何可靠性保证。它同时被TCP和UDP使用，TCP和UDP的每组数据都通过端系统和每个中间路由器中的IP层在互联网中进行传输。ICMP是IP协议的附属协议。IP层用它来与其他主机或路由器交换错误报文和其他重要信息。IGMP是Internet组管理协议。它用来把一个UDP数据报多播到多个主机。"
  },
  
  {
    "title": "翻墙原理",
    "url": "/posts/%E7%BF%BB%E5%A2%99%E5%8E%9F%E7%90%86/",
    "categories": "其他学习, 问题导向",
    "tags": "翻墙",
    "date": "2021-11-15 19:55:00 +0800",
    





    "snippet": "现象：换了个翻墙软件，发现这个软件在访问ipip.net不能隐匿自己的ip，会显示我自己的ip。这就让我心生担心，不能隐匿自己的ip，那干坏事(挖洞、翻墙后自己的隐私等等)就会被轻易发现，所以就想探究一下翻墙的原理。想解决的问题：翻墙究竟能不能隐匿ip？如何知道自己用的翻墙软件的翻墙方式浏览器检验ip的网站是通过什么包检验的解决了：开个全局模式就行了= =，不知道为啥这次就行，之前都不行。开全局模式后得等一会全局模式是指所有网站通过代理访问，包括您在国内可以直连的网站。在全局模式下，由于您在国内可以直连的网站都会通过我们的服务，这会导致您浏览国内网站时网速变慢，所以一般不建议您更改为全局模式，PAC模式是境外的网站走代理访问，国内的网站不会通过我们的代理。可能会出现少部分国外网站会不经过代理，不能起到加速效果，甚至无法访问（解决方案：您可以编辑PAC规则列表，将不走代理的国外网址加入进去，或者直接选择全局模式）。直连模式是指所有的服务器都不走我们的代理。您可以在不想退出客户端，但并不想使用我们服务的情况下切换为该模式。ip隐匿技术：操作系统的语言时区等信息。翻墙：为了访问国外网络，聪明的人们想到了利用境外服务器代理的方法绕过 GFW 的过滤，其中包含了各种HTTP代理服务、Socks服务、VPN服务…翻墙原理由于牵扯到IP, DNS, SNI等资讯专业内容较为复杂主要有：DNS污染和劫持、封锁IP、封锁HTTP代理、封锁VPN翻墙协议：VPN有多种协议：OPENVPN、PPTP、L2TP/IPSec、SSLVPN、IKEv2 VPN，Cisco VPN等。 其中的PPTP和L2TP是明文传输协议。 只负责传输，不负责加密。 Vmess, Shadowsocks, Snell , SOCKS5 , ShadowsocksR。没用的：VPN协议：明显的特征:很多VPN数据连接到同一个国外的服务器，绝大部分VPN都是在翻墙，一抓一个准，被屏蔽。知道你去了那里。HTTPS：HTTPS虽然不知道你的数据，但是可以知道你去了那里。实用的：Socks代理(得加密)：Socks代理本身协议是明文传输，导致Socks代理很容易被封，所以可以考虑对Socks进行加密。socks5自己加密，socks5是运用很广泛的协议(如腾讯要运营北美地区的wechat)，所以没办法直接封杀socks5协议。SSH+Socks组合：所以出现了SSH Socks，基于 RSA 加密技术，建立起一条加密的通道。RC4加密会被破解，用AES加密在客户端和服务端自定义密钥更安全。我用的翻墙软件：BeehiveVPN：v2rayN：做一个翻墙平台，把不同的翻墙方法都提供给用户，让用户能够根据自己的需要自由组合。Shadowsocks(SS)：用运用很广泛的socks5协议，通过把自己伪装在一群正常人里面，私下干些偷鸡摸狗的事情，这就比扎堆（VPN）会安全很多。Shadowsocks-rss(SSR)："
  },
  
  {
    "title": "我的渗透测试总结",
    "url": "/posts/%E6%88%91%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%80%BB%E7%BB%93/",
    "categories": "其他学习, 渗透测试",
    "tags": "历程总结",
    "date": "2021-10-10 10:55:00 +0800",
    





    "snippet": "我的渗透测试总结2021.4.20	对渗透测试有了了解，做了简单系统性的学习。2021.8.18	自己做了渗透测试的思维导图。(现在看来还是做得挺好的，勿喷)2021.10.5	自己学习了一个月的内网渗透，搭建并完成了[VulnStack] ATT&amp;amp;CK实战系列—红队实战（一）。使用过msf，cs，还自己装了冰蝎哥斯拉。算是，走过一两次内网渗透的流程。(当时自己感觉还是很有成就感的)更新：然后，我的渗透测试和内网渗透的学习到现在(2022.3.2)也没进展= =。也是听我的学长黄老板说，内网渗透很难搞，而且依赖真实环境，所以自己学习的话比较困难。所以我就先把外网能力提升，然后再深入做内网等。"
  },
  
  {
    "title": "字节码与python反序列化",
    "url": "/posts/%E5%AD%97%E8%8A%82%E7%A0%81%E5%92%8Cpython%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
    "categories": "Web安全, python",
    "tags": "字节码",
    "date": "2021-08-10 12:40:00 +0800",
    





    "snippet": "字节码什么是机器码机器码机器码(machine code)，学名机器语言指令，有时也被称为原生码（Native Code），是电脑的CPU可直接解读的数据。通常意义上来理解的话，机器码就是计算机可以直接执行，并且执行速度最快的代码。用机器语言编写程序，编程人员要首先熟记所用计算机的全部指令代码和代码的涵义。手编程序时，程序员得自己处理每条指令和每一数据的存储分配和输入输出，还得记住编程过程中每步所使用的工作单元处在何种状态。这是一件十分繁琐的工作，编写程序花费的时间往往是实际运行时间的几十倍或几百倍。而且，编出的程序全是些0和1的指令代码，直观性差，还容易出错。现在，除了计算机生产厂家的专业人员外，绝大多数的程序员已经不再去学习机器语言了。什么是字节码字节码字节码（Bytecode）是一种包含执行程序、由一序列 op 代码/数据对 组成的二进制文件。字节码是一种中间码，它比机器码更抽象，需要直译器转译后才能成为机器码的中间代码。通常情况下它是已经经过编译，但与特定机器码无关。字节码通常不像源码一样可以让人阅读，而是编码后的数值常量、引用、指令等构成的序列。字节码主要为了实现特定软件运行和软件环境、与硬件环境无关。字节码的实现方式是通过编译器和虚拟机器。编译器将源码编译成字节码，特定平台上的虚拟机器将字节码转译为可以直接执行的指令。字节码的典型应用为Java bytecode。字节码的实现方式是通过编译器和虚拟机器。编译器将源码编译成字节码，特定平台上的虚拟机器将字节码转译为可以直接执行的指令。字节码在运行时通过JVM（JAVA虚拟机）做一次转换生成机器指令，因此能够更好的跨平台运行。  机器码是电脑CPU直接读取运行的机器指令，运行速度最快，但是非常晦涩难懂，也比较难编写，一般从业人员接触不到。  字节码是一种中间状态（中间码）的二进制代码（文件）。需要直译器转译后才能成为机器码。一、Java里的字节码字节码如何参与java运行过程我们在编写java的源代码,会被javac转换成字节码文件(.class)在运行时java虚拟机（JVM）内嵌的解释器将字节码文件转换成机器码java源文件 -&amp;gt; class字节码文件 -&amp;gt; 机器码javac：javac 是java语言编程编译器。全称java compiler。javac工具读由java语言编写的类和接口的定义，并将它们编译成字节代码的class文件。JVM:JVM是Java Virtual Machine（Java虚拟机）的缩写，JVM是一种用于计算设备的规范，它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。引入Java语言虚拟机后，Java语言在不同平台上运行时不需要重新编译。Java语言使用Java虚拟机屏蔽了与具体平台相关的信息，使得Java语言编译程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。跨平台，可移植性，一次编译，就可以在不同操作系统上有相同的执行。JVM在不同操作系统的版本是相对应的，是不同的。(JVM是C++开发)3.class字节码文件大概是什么Java 字节码类文件（.class）是 Java 编译器编译 Java 源文件（.java）产生的“目标文件”。它是一种8位字节的二进制流文件， 各个数据项按顺序紧密的从前向后排列， 相邻的项之间没有间隙， 这样可以使得 class 文件非常紧凑， 体积轻巧， 可以被 JVM 快速的加载至内存， 并且占据较少的内存空间（方便于网络的传输）。Java 源文件在被 Java 编译器编译之后， 每个类（或者接口）都单独占据一个 class 文件， 并且类中的所有信息都会在 class 文件中有相应的描述， 由于 class 文件很灵活， 它甚至比 Java 源文件有着更强的描述能力。一个 Java 类文件大致可以归为 10 个项：  Magic：该项存放了一个 Java 类文件的魔数（magic number）和版本信息。一个 Java 类文件的前 4 个字节被称为它的魔数。每个正确的 Java 类文件都是以 0xCAFEBABE 开头的，这样保证了 Java 虚拟机能很轻松的分辨出 Java 文件和非 Java 文件。  Version：该项存放了 Java 类文件的版本信息，它对于一个 Java 文件具有重要的意义。因为 Java 技术一直在发展，所以类文件的格式也处在不断变化之中。类文件的版本信息让虚拟机知道如何去读取并处理该类文件。  Constant Pool：该项存放了类中各种文字字符串、类名、方法名和接口名称、final 变量以及对外部类的引用信息等常量。虚拟机必须为每一个被装载的类维护一个常量池，常量池中存储了相应类型所用到的所有类型、字段和方法的符号引用，因此它在 Java 的动态链接中起到了核心的作用。常量池的大小平均占到了整个类大小的 60% 左右。  Access_flag：该项指明了该文件中定义的是类还是接口（一个 class 文件中只能有一个类或接口），同时还指名了类或接口的访问标志，如 public，private, abstract 等信息。  This Class：指向表示该类全限定名称的字符串常量的指针。  Super Class：指向表示父类全限定名称的字符串常量的指针。  Interfaces：一个指针数组，存放了该类或父类实现的所有接口名称的字符串常量的指针。以上三项所指向的常量，特别是前两项，在我们用 ASM 从已有类派生新类时一般需要修改：将类名称改为子类名称；将父类改为派生前的类名称；如果有必要，增加新的实现接口。  Fields：该项对类或接口中声明的字段进行了细致的描述。需要注意的是，fields 列表中仅列出了本类或接口中的字段，并不包括从超类和父接口继承而来的字段。  Methods：该项对类或接口中声明的方法进行了细致的描述。例如方法的名称、参数和返回值类型等。需要注意的是，methods 列表里仅存放了本类或本接口中的方法，并不包括从超类和父接口继承而来的方法。使用 ASM 进行 AOP 编程，通常是通过调整 Method 中的指令来实现的。  Class attributes：该项存放了在该文件中类或接口所定义的属性的基本信息。27.191.237.5:7288/data/uploadPlug.php::$datahttps://www.kancloud.cn/chandler/programming_road/695586https://buaq.net/go-25697.htmlPython pickle序列化和反序列化1.什么是序列化？序列化：把不能够直接存储在文件中的数据变得可存储（保存文件的后缀为”.pkl”，不能直接打开）。所有的数据类型都可以通过pickle模块进行序列化。pickle.dump(obj, file, protocol=None,*,fix_imports=True)​	序列化对象，把任意对象序列化成一个bytes类型。，并将结果数据流写入到文件对象中。​	参数file有一点需要注意，必须是以二进制的形式进行操作（写入）。得在之前执行代码 open(‘文件路径’,’wb’)，以二进制的形式（’wb’）写入。​	参数protocol是序列化模式，默认值为0，，一共有5中不同的类型，即（0,1,2,3,4）。（0,1,2）对应的是python早期的版本，（3,4）则是在python3之后的版本。此外，参数可选 pickle.HIGHEST_PROTOCOL和pickle.DEFAULT_PROTOCOL。当前，python3.5版本中，pickle.HIGHEST_PROTOCOL的值为4，pickle.DEFAULT_PROTOCOL的值为3。当protocol参数为负数时，表示选择的参数是pickle.HIGHEST_PROTOCOL。pickle.dumps(obj, protocol=None,*,fix_imports=True)pickle.dumps()方法跟pickle.dump()方法的区别在于，pickle.dumps()方法不需要写入文件中，它是直接返回一个序列化的bytes对象。2.什么是反序列化？反序列化: 把存储在文件中的数据拿出来恢复成原来的数据类型。pickle.load(file, *,fix_imports=True, encoding=”ASCII”. errors=”strict”)	反序列化对象。将文件中的数据解析为一个Python对象。该方法实现的是将序列化的对象从文件file中读取出来。​	参数file，需要注意的是，必须是以二进制的形式进行操作（读取）。得在之前执行代码 open(‘文件路径’,’rb’)，以二进制的形式（’rb’）读取。pickle.loads(bytes_object, *,fix_imports=True, encoding=”ASCII”. errors=”strict”)pickle.loads()方法跟pickle.load()方法的区别在于，pickle.loads()方法是直接从bytes对象中读取序列化的信息，而非从文件中读取。https://www.jianshu.com/p/83fab384f8behttps://blog.csdn.net/y472360651/article/details/87209589picker在python2和python3的默认参数是有所差别的：如：python2默认的序列化参数protocol是0，python2默认的序列化参数protocol是3。一般python3里用pickle.dumps(data, protocol=2)pickle.loads(info, encoding=”utf-8”)就能达到Python2与Python3互相序列化与反序列化的效果。PVM( Python Virtual Machine , Python 虚拟机 )那 PVM 有什么用呢 ?在使用 C , C++ 等编译性语言编写的程序时 , 解释器需要先将源代码文件转换成计算机使用的机器语言( 也就是常说的 “ 编译 “ 过程 ) , 然后经过链接器链接之后形成了二进制可执行文件( 也就是常说的 “ 链接 “ 过程 ) . 运行该程序的时候 , 计算机会将二进制可执行文件从硬盘载入到内存中并运行 .但是对于 Python 而言 , 它可以直接从源代码运行程序 . Python解释器会将源代码编译为字节码 , 然后将编译后的字节码转发到 Python 虚拟机中执行 .所以说 PVM 的作用非常简单 , 它是一个用来解释字节码的解释引擎 .它的执行流程是怎样的呢 ?一般来说 , 当运行 Python 程序时 , PVM 会执行两个步骤 .首先 , PVM 会把源代码编译成字节码 . 字节码是 Python 语言特有的一种表现形式 , 它不是二进制机器码 , 需要进一步编译才能被机器执行 . 如果 Python 进程在主机上有写入权限 , 那么它会把程序字节码保存为一个以 .pyc 为扩展名的文件 . 如果没有写入权限 , 则 Python 进程会在内存中生成字节码 , 在程序执行结束后被自动丢弃 .一般来说 , 在构建程序时最好给 Python 进程在主机上的写入权限 , 这样只要源代码没有改变 , 生成的 .pyc 文件就可以被重复利用 , 提高执行效率 , 同时隐藏源代码 .然后 , Python 进程会把编译好的字节码转发到 PVM( Python 虚拟机 ) 中 , PVM会循环迭代执行字节码指令 , 直到所有操作被完成 .Pickle是一门基于栈的编程语言 , 有不同的编写方式 , 其本质就是一个轻量级的 PVM .这个轻量级的 PVM 由三个部分组成 , 如下所示      指令处理器( Instruction processor )    从数据流中读取操作码和参数 , 并对其进行解释处理 . 指令处理器会循环执行这个过程 , 不断改变 stack 和 memo 区域的值 . 直到遇到 “ . “ 这个结束符号 . 这时 , 最终停留在栈顶的的值将会被作为反序列化对象返回 .        栈区( stack )    由 Python 的列表( list )实现 , 作为流数据处理过程中的暂存区 , 在不断的进出栈过程中完成对数据流的反序列化操作，并最终在栈顶生成反序列化的结果        标签区( memo )    由 Python 的字典( dict )实现 , 可以看作是数据索引或者标记 , 为 PVM 的整个生命周期提供存储功能 .  这里需要重点关注指令处理器可读取的操作码 . 完整的指令集可以参考 Python pickle 反序列化实例分析 这篇文章的 , 现在我只讲比较重要的几个 .pickle反序列化漏洞原理分析反序列化漏洞的根源出在 __reduce__() 魔术方法 .很多反序列化过程都会存在像 “构造函数” 或者 “析构函数” 这样的函数( 原谅我不知道还能怎么形容 ) . 每当反序列化过程开始或者结束时 , 都会自动调用这类函数 . 而这恰好是反序列化漏洞经常出现的地点 , PHP 的 __wakeup() 魔术方法是这样 , __reduce__() 魔术方法也是这样 .而在反序列化过程中 , 编程语言需要根据序列化字符串去解析出自己独特的语言数据结构 . 为了实现这点，就必然要在内部把解析出来的结果去执行一下 . 好呗 ! 有了这个执行的操作 , 反序列化过程不出事还好 , 一出事就是一个天大的 RCE —— 毕竟这些编程语言的应用是非常广泛的~"
  },
  
  {
    "title": "Enable Google Page Views",
    "url": "/posts/enable-google-pv/",
    "categories": "其他学习, Jekyll教程",
    "tags": "",
    "date": "2021-01-04 07:32:00 +0800",
    





    "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.Set up Google AnalyticsCreate GA account and propertyFirst, you need to set up your account on Google analytics. While you create your account, you must create your first Property as well.  Head to https://analytics.google.com/ and click on Start Measuring  Enter your desired Account Name and choose the desired checkboxes  Enter your desired Property Name. This is the name of the tracker project that appears on your Google Analytics dashboard  Enter the required information About your business  Hit Create and accept any license popup to set up your Google Analytics account and create your propertyCreate Data StreamWith your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first Data Stream. If not, follow these steps:  Go to Admin on the left column  Select the desired property from the drop-down on the second column  Click on Data Streams  Add a stream and click on Web  Enter your blog’s URLIt should look like this:Now, click on the new data stream and grab the Measurement ID. It should look something like G-V6XXXXXXXX. Copy this to your _config.yml file:google_analytics:  id: &#39;G-V6XXXXXXX&#39;   # fill in your Google Analytics ID  # Google Analytics pageviews report settings  pv:    proxy_endpoint:   # fill in the Google Analytics superProxy endpoint of Google App Engine    cache_path:       # the local PV cache data, friendly to visitors from GFW regionWhen you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.Setup Page ViewsThere is a detailed tutorial available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.Setup Google App Engine      Visit https://console.cloud.google.com/appengine        Click on Create Application        Click on Create Project        Enter the name and choose the data center close to you        Select Python language and Standard environment        Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient.        Go to your App Engine dashboard on your browser and select API &amp;amp; Services from the left navigation menu        Click on Enable APIs and Services button on the top        Enable the following APIs: Google Analytics API        On the left, Click on OAuth Consent Screen and accept Configure Consent Screen. Select External since your blog is probably hosted for the public. Click on Publish under Publishing Status        Click on Credentials on the left and create a new OAuth Client IDs credential. Make sure to add an entry under Authorized redirect URIs that matches: https://&amp;lt;project-id&amp;gt;.&amp;lt;region&amp;gt;.r.appspot.com/admin/auth        Note down the Your Client ID and Your Client Secret. You’ll need this in the next section.        Download and install the cloud SDK for your platform: https://cloud.google.com/sdk/docs/quickstart        Run the following commands:    [root@bc96abf71ef8 /]# gcloud init~snip~Go to the following link in your browser:    https://accounts.google.com/o/oauth2/auth?response_type=code&amp;amp;client_id=XYZ.apps.googleusercontent.com&amp;amp;redirect_uri=ABCDEFGEnter verification code: &amp;lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&amp;gt;You are logged in as: [blah_blah@gmail.com].Pick cloud project to use:[1] chirpy-test-300716[2] Create a new projectPlease enter numeric choice or text value (must exactly match listitem): 1        [root@bc96abf71ef8 /]# gcloud info    Your selected project info should be displayed here    ```  Setup Google Analytics superProxy      Clone the Google Analytics superProxy project on Github: https://github.com/googleanalytics/google-analytics-super-proxy to your local.        Remove the first 2 lines in the src/app.yaml file:    - application: your-project-id- version: 1            In src/config.py, add the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET that you gathered from your App Engine Dashboard.        Enter any random key for XSRF_KEY, your config.py should look similar to this    #!/usr/bin/python2.7__author__ = &#39;pete.frisella@gmail.com (Pete Frisella)&#39;# OAuth 2.0 Client SettingsAUTH_CONFIG = {  &#39;OAUTH_CLIENT_ID&#39;: &#39;YOUR_CLIENT_ID&#39;,  &#39;OAUTH_CLIENT_SECRET&#39;: &#39;YOUR_CLIENT_SECRET&#39;,  &#39;OAUTH_REDIRECT_URI&#39;: &#39;%s%s&#39; % (    &#39;https://chirpy-test-XXXXXX.ue.r.appspot.com&#39;,    &#39;/admin/auth&#39;  )}# XSRF SettingsXSRF_KEY = &#39;OnceUponATimeThereLivedALegend&#39;              You can configure a custom domain instead of https://PROJECT_ID.REGION_ID.r.appspot.com.But, for the sake of keeping it simple, we will be using the Google provided default URL.            From inside the src/ directory, deploy the app    [root@bc96abf71ef8 src]# gcloud app deployServices to deploy:descriptor:      [/tmp/google-analytics-super-proxy/src/app.yaml]source:          [/tmp/google-analytics-super-proxy/src]target project:  [chirpy-test-XXXX]target service:  [default]target version:  [VESRION_NUM]target url:      [https://chirpy-test-XXXX.ue.r.appspot.com]        Do you want to continue (Y/n)? Y    Beginning deployment of service [default]…╔════════════════════════════════════════════════════════════╗╠═ Uploading 1 file to Google Cloud Storage                 ═╣╚════════════════════════════════════════════════════════════╝File upload done.Updating service [default]…done.Setting traffic split for service [default]…done.Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]    You can stream logs from the command line by running:$ gcloud app logs tail -s default    To view your application in the web browser run:$ gcloud app browse```        Visit the deployed service. Add a /admin to the end of the URL.        Click on Authorize Users and make sure to add yourself as a managed user.        If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix.  If everything went good, you’ll get this screen:Create Google Analytics QueryHead to https://PROJECT_ID.REGION_ID.r.appspot.com/admin and create a query after verifying the account. GA Core Reporting API query request can be created in Query Explorer.The query parameters are as follows:  start-date: fill in the first day of blog posting  end-date: fill in today (this is a parameter supported by GA Report, which means that it will always end according to the current query date)  metrics: select ga:pageviews  dimensions: select ga:pagePathIn order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules 1:      filters: fill in ga:pagePath=~^/posts/.*/$;ga:pagePath!@=.    Among them, ; means using logical AND to concatenate two rules.    If the site.baseurl is specified, change the first filtering rule to ga:pagePath=~^/BASE_URL/posts/.*/$, where BASE_URL is the value of site.baseurl.  After Run Query, copy the generated contents of API Query URI at the bottom of the page and fill in the Encoded URI for the query of SuperProxy on GAE.After the query is saved on GAE, a Public Endpoint (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click Enable Endpoint in Public Request Endpoint to make the query effective, and click Start Scheduling in Scheduling to start the scheduled task.Configure Chirpy to Display Page ViewOnce all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.Update the _config.yml file of Chirpy project with the values from your dashboard, to look similar to the following:google_analytics:  id: &#39;G-V6XXXXXXX&#39;   # fill in your Google Analytics ID  pv:    proxy_endpoint: &#39;https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&amp;lt;ID FROM SUPER PROXY&amp;gt;&#39;    cache_path:       # the local PV cache data, friendly to visitors from GFW regionNow, you should see the Page View enabled on your blog.Reference            Google Analytics Core Reporting API: Filters &amp;#8617;      "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "其他学习, Jekyll教程",
    "tags": "",
    "date": "2019-08-11 00:34:00 +0800",
    





    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp;amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "其他学习, Jekyll教程",
    "tags": "",
    "date": "2019-08-09 20:55:00 +0800",
    





    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler. In addition, Git is also required to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  Forking on GitHub - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterCreate a new repository from the Chirpy Starter and name it &amp;lt;GH_USERNAME&amp;gt;.github.io, where GH_USERNAME represents your GitHub username.Option 2. Forking on GitHubFork Chirpy on GitHub and rename it to &amp;lt;GH_USERNAME&amp;gt;.github.io. Please note that the default branch code is in development.  If you want the site to be stable, please switch to the latest tag and start writing.And then execute:$ bash tools/init.sh  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Removes some files or directories from your repository:          .travis.yml      files under _posts            If the option --no-gh is provided, the directory .github will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension .hook of .github/workflows/pages-deploy.yml.hook, and then remove the other files and directories in the folder .github.        Removes item Gemfile.lock from .gitignore.    Creates a new commit to save the changes automatically.Installing DependenciesBefore running for the first time, go to the root directory of your site, and install dependencies as follows:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langCustoming StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of the style file.Starting from v4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, create a new file _sass/variables-hook.scss and assign new values to the target variable in it.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/assets/cross_origin.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\    --volume=&quot;$PWD:/srv/jekyll&quot; \\    -p 4000:4000 jekyll/jekyll \\    jekyll serveAfter a while, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using Github ActionsFor security reasons, GitHub Pages build runs on safe mode, which restricts us from using plugins to generate additional page files. Therefore, we can use GitHub Actions to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.Quickly check the files needed for GitHub Actions build:      Ensure your Jekyll site has the file .github/workflows/pages-deploy.yml. Otherwise, create a new one and fill in the contents of the sample file, and the value of the on.push.branches should be the same as your repo’s default branch name.        Ensure your Jekyll site has file tools/deploy.sh. Otherwise, copy it from here to your Jekyll site.        Furthermore, if you have committed Gemfile.lock to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file:    $ bundle lock --add-platform x86_64-linux      After the above steps, rename your repository to &amp;lt;GH_USERNAME&amp;gt;.github.io on GitHub.Now publish your Jekyll site by:      Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named gh-pages will appear to store the built site files.        Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar, and then in the section Source of GitHub Pages, select the /(root) directory of branch gh-pages as the publishing source. Remember to click Save before leaving.            Visit your website at the address indicated by GitHub.  Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\    --env JEKYLL_ENV=production \\    --volume=&quot;$PWD:/srv/jekyll&quot; \\    jekyll/jekyll \\    jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server.UpgradingIt depends on how you use the theme:      If you are using the theme gem (there will be gem &quot;jekyll-theme-chirpy&quot; in the Gemfile), editing the Gemfile and update the version number of the theme gem, for example:    - gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.2&quot;, &quot;&amp;gt;= 3.2.1&quot;+ gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.3&quot;, &quot;&amp;gt;= 3.3.0&quot;        And then execute the following command:    $ bundle update jekyll-theme-chirpy        As the version upgrades, the critical files (for details, see the Startup Template) and configuration options will change. Please refer to the Upgrade Guide to keep your repo’s files in sync with the latest version of the theme.        If you forked from the source project (there will be gemspec in the Gemfile of your site), then merge the latest upstream tags into your Jekyll site to complete the upgrade.The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts.  "
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "其他学习, Jekyll教程",
    "tags": "",
    "date": "2019-08-08 14:10:00 +0800",
    





    "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:---author:  name: Full Name  link: https://example.com---Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=&quot;700&quot; h=&quot;400&quot; }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&amp;lt;img src=&quot;/img/path/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute src, width, height, and alt for the image:---image:  src: /path/to/image/file  width: 1000   # in pixels  height: 400   # in pixels  alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the  attribute src only needs the image file name.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&amp;gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:​```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:​````markdown​```shellecho ‘No more line numbers!’{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:​````markdown​```shellcontent{: file=&quot;path/to/file&quot; }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:​````markdown{% raw %}​```liquid{% if product.title contains ‘Pack’ %}  This product’s title contains the word Pack.{% endif %}{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts.````"
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "其他学习, Jekyll教程",
    "tags": "",
    "date": "2019-08-08 11:33:00 +0800",
    





    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    Task list  TODO  Completed  Defeat COVID-19          Vaccine production      Economic recovery      People smile again      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images  Default (with caption)Full screen width and center alignment  Shadowshadow effect (visible in light mode)  Left aligned      Float to left    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”        Float to right    “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.”  Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then    echo &quot;The command was not successful.&quot;;    #do the needful / exitfi;Specific filename@import  &quot;colors/light-typography&quot;,  &quot;colors/dark-typography&quot;Reverse Footnote            The footnote source &amp;#8617;              The 2nd footnote source &amp;#8617;      "
  }
  
]

